#!/usr/bin/env python3
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ PostgreSQL –≤ deployed —Å—Ä–µ–¥–µ
"""

import asyncio
import os
import logging
from database.database import Database

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def force_postgres_connection():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"""
    
    print("üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê POSTGRESQL")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    database_url = os.getenv('DATABASE_URL')
    replit_deployment = os.getenv('REPLIT_DEPLOYMENT')
    
    print(f"REPLIT_DEPLOYMENT: {replit_deployment}")
    print(f"DATABASE_URL –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {'–î–ê' if database_url else '–ù–ï–¢'}")
    
    if not database_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º asyncpg –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    try:
        import asyncpg
        print("‚úÖ asyncpg –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º asyncpg...")
        import subprocess
        subprocess.run(["pip", "install", "asyncpg"], check=True)
        import asyncpg
        print("‚úÖ asyncpg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    try:
        conn = await asyncpg.connect(database_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        user_count = await conn.fetchval("SELECT COUNT(*) FROM users")
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ PostgreSQL: {user_count}")
        
        if user_count > 0:
            users = await conn.fetch("SELECT telegram_id, credits FROM users LIMIT 5")
            for user in users:
                print(f"   - User {user['telegram_id']}: {user['credits']} credits")
        
        await conn.close()
        print("‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PostgreSQL: {e}")
        return False

async def test_database_selection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∫—É—é –±–∞–∑—É –≤—ã–±–∏—Ä–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞"""
    
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–´–ë–û–†–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º Database –æ–±—ä–µ–∫—Ç
    db = Database()
    
    print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–∞: {'PostgreSQL' if db.use_postgres else 'SQLite'}")
    print(f"DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {'–î–ê' if db.database_url else '–ù–ï–¢'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if db.use_postgres:
        try:
            user = await db.get_user(1864913930)  # Admin user
            if user:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω admin: {user.credits} credits")
                return True
            else:
                print("‚ùå Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False
    else:
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgreSQL")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
    postgres_ok = await force_postgres_connection()
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±–æ—Ä –±–∞–∑—ã
    db_selection_ok = await test_database_selection()
    
    print("\nüìã –ò–¢–û–ì:")
    print("=" * 50)
    
    if postgres_ok and db_selection_ok:
        print("üéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢! Deployed –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgreSQL")
        print("üì± –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –≤ –±–æ—Ç–µ")
    elif postgres_ok and not db_selection_ok:
        print("‚ö†Ô∏è  PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –≤—ã–±–∏—Ä–∞–µ—Ç SQLite")
        print("üîß –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –±–∞–∑—ã")
    else:
        print("‚ùå PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üîß –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DATABASE_URL")

if __name__ == "__main__":
    asyncio.run(main())