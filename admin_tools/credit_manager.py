#!/usr/bin/env python3
"""
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.database import db, init_database
from database.models import Transaction, TransactionType

async def add_credits_to_user(telegram_id: int, credits: int, description: str = "Manual credit adjustment"):
    """–î–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    await init_database()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await db.get_user(telegram_id)
    if not user:
        print(f"ü§ñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print(f"üìù –°–æ–∑–¥–∞—é –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from database.models import User, UserStatus
        new_user = User(
            telegram_id=telegram_id,
            credits=0,
            status=UserStatus.REGULAR,
            first_name="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            username=None
        )
        
        created = await db.create_user(new_user)
        if not created:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return False
        
        user = await db.get_user(telegram_id)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
    else:
        print(f"üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} (@{user.username})")
    
    print(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user.credits} –∫—Ä–µ–¥–∏—Ç–æ–≤")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã
    new_credits = user.credits + credits
    success = await db.update_user_credits(telegram_id, new_credits)
    
    if success:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        transaction = Transaction(
            user_id=telegram_id,
            type=TransactionType.ADMIN_GRANT,
            amount=credits,
            description=description
        )
        await db.create_transaction(transaction)
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {credits} –∫—Ä–µ–¥–∏—Ç–æ–≤")
        print(f"üí≥ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_credits} –∫—Ä–µ–¥–∏—Ç–æ–≤")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤")
        return False

async def find_recent_payments(amount: int = 399):
    """–ù–∞–π—Ç–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∏ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É"""
    await init_database()
    
    print(f"üîç –ü–æ–∏—Å–∫ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ —Å—É–º–º—É {amount} —Ä—É–±–ª–µ–π...")
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞ –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
    # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    print("üí° –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("   - Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 3:
        print("üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"   python {sys.argv[0]} <telegram_id> <credits> [–æ–ø–∏—Å–∞–Ω–∏–µ]")
        print("\nüîç –ü—Ä–∏–º–µ—Ä—ã:")
        print(f"   python {sys.argv[0]} 123456789 35 '–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –∑–∞ –ø–∞–∫–µ—Ç 399‚ÇΩ'")
        print(f"   python {sys.argv[0]} 123456789 -10 '–í–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–æ—á–Ω–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è'")
        return
    
    try:
        telegram_id = int(sys.argv[1])
        credits = int(sys.argv[2])
        description = sys.argv[3] if len(sys.argv) > 3 else "Manual credit adjustment"
        
        print(f"üéØ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ {credits} –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}")
        
        success = await add_credits_to_user(telegram_id, credits, description)
        
        if success:
            print("üéâ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("üí• –û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. Telegram ID –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())